version: '3.3'

services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_DB=my_store
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin123
    ports:
      - 5432:5432
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@mail.com
      - PGADMIN_DEFAULT_PASSWORD=root
    ports:
      - 5050:80

  mysql:
    image: mysql:5
    environment:
      - MYSQL_DATABASE=my_store
      - MYSQL_ROOT_PASSWORD=admin123
    ports:
      - 3306:3306
    volumes:
      - ./mysql_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=admin123
    ports:
      - 8080:80

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    environment:
      - MONGO_INITDB_DATABASE=my_store
    ports:
      - 27017:27017
    volumes:
      - ./mongodb_data:/data/db

  mongo-express:
    image: mongo-express:1.0.0-alpha.4
    container_name: mongo-express
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=
      - ME_CONFIG_MONGODB_ADMINPASSWORD=
      - ME_CONFIG_OPTIONS_EDITORTHEME=ambiance


# levantamos docker con el siguiente comando
# $ docker-compose up -d postgres
# bajamos docker con el siguiente comando
# $ docker-compose down
# para obtener la ip de nuestro contenedor de la base de datos, obtener el idcontainer, y luego ejecutamos el siguiente comando
# docker inspect [CONTAINER ID]
# la ip que tenemos que obtener es la IPAddress

# con el siguiente comando entramos a la base de datos mediante la terminal
# $ docker-compose exec postgres bash
# esta seria la forma de ejecutar comando, hay que conectarse a la base de datos de la siguiente manera.
# psql -h localhost -d my_store -U admin
# con el siguiete comando nos muestra la estructura de la base de datos
# \d+
# para salir de la base de datos es de la siguiente manera
# \q
# Para salir del contenedor se hace con la palabra reservada
# exit
# levantamos pgadmin con el siguiente comando
# $ docker-compose up -d pgadmin
# entramos a
# http://localhost:5050/
# para correr phpmyadmin y que se conecte a la base de datos mysql, este tiene que tener el mismo nombre que el contenedor que hice para la base de datos de mysql, en este caso la base de datos se llama mysql, entonces la configuracion de phpmyadmin tiene que tener la siguiente configuracion para que esta funcione de manera correcta. - MYSQL_HOST=mysql
# estos se levantan de la siguiente manera
# docker-compose up -d mysql
# docker-compose up -d phpmyadmin
